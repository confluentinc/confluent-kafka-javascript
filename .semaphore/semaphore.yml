# This file is managed by ServiceBot plugin - Semaphore. The content in this file is created using a common
# template and configurations in service.yml.
# Any modifications made to version, name, agent, and global_job_config will be overwritten by the generated
# content in nightly runs. Code changes made to the remaining sections will not be affected.
# For more information, please refer to the page:
# https://confluentinc.atlassian.net/wiki/spaces/Foundations/pages/2871296194/Add+SemaphoreCI
version: v1.0
name: build-test-release
agent:
  machine:
    type: s1-prod-ubuntu24-04-amd64-1

auto_cancel:
  running:
    when: "branch != 'master'"

execution_time_limit:
  hours: 3

queue:
  - when: "branch != 'master'"
    processing: parallel

global_job_config:
  prologue:
    commands:
      - checkout
      - git submodule update --init --recursive
      - cd deps/librdkafka
      - git fetch origin
      - git checkout v2.11.0
      - cd ../../
      - cache clear

blocks:
  - name: "Linux amd64 (musl): Build and test"
    dependencies: [ ]
    skip:
      when: "branch != 'master'"
    task:
      agent:
        machine:
          type: s1-prod-ubuntu24-04-amd64-2
      prologue:
        commands:
          - '[[ -z $DOCKERHUB_APIKEY ]] || docker login --username $DOCKERHUB_USER --password $DOCKERHUB_APIKEY'
      jobs:
        - name: "Build from source and test for musl"
          commands:
            - docker run -v "$(pwd):/v" node:18-alpine /v/.semaphore/build-docker-alpine.sh

  - name: "Linux arm64 (musl): Build and test"
    dependencies: [ ]
    skip:
      when: "branch != 'master'"
    task:
      agent:
        machine:
          type: s1-prod-ubuntu24-04-arm64-1
      prologue:
        commands:
          - '[[ -z $DOCKERHUB_APIKEY ]] || docker login --username $DOCKERHUB_USER --password $DOCKERHUB_APIKEY'
      jobs:
        - name: "Build from source and test for musl"
          commands:
              - docker run -v "$(pwd):/v" node:18-alpine /v/.semaphore/build-docker-alpine.sh

  - name: "Linux arm64: Build and test"
    dependencies: [ ]
    skip:
      when: "branch != 'master'"
    task:
      agent:
        machine:
          type: s1-prod-ubuntu24-04-arm64-1
      jobs:
        - name: "Build from source and test"
          commands:
            - export CKJS_LINKING=dynamic
            - npm run install-from-source
            - make test

  - name: 'macOS arm64/m1: Build and test'
    dependencies: []
    skip:
      when: "branch != 'master'"
    task:
      agent:
        machine:
          type: s1-prod-macos-13-5-arm64
      jobs:
        - name: 'Build from source and test'
          commands:
            - export CKJS_LINKING=dynamic
            - npm run install-from-source
            - make test

  - name: "Linux amd64: Build, test, lint, docs"
    dependencies: [ ]
    task:
      agent:
        machine:
          type: s1-prod-ubuntu24-04-amd64-2
      prologue:
        commands:
          - export CKJS_LINKING=dynamic
          - npm run install-from-source
      jobs:
        - name: "Test"
          commands:
            - make test
            - artifact push workflow coverage/mocha/coverage-final.json --destination "mocha-coverage.json"
        - name: "Promisified Tests (Classic Protocol)"
          commands:
            - '[[ -z $DOCKERHUB_APIKEY ]] || docker login --username $DOCKERHUB_USER --password $DOCKERHUB_APIKEY'
            - docker compose -f test/docker/docker-compose.yml up -d && sleep 30
            - export NODE_OPTIONS='--max-old-space-size=1536'
            - TEST_DEBUG=all npx jest --no-colors --ci  test/promisified/oauthbearer_cb.spec.js
            - artifact push workflow coverage/jest/coverage-final.json --destination "jest-classic-coverage.json"

after_pipeline:
  task:
    agent:
      machine:
        type: s1-prod-ubuntu24-04-amd64-1
    jobs:
      - name: SonarQube
        commands:
          - checkout
          - sem-version java 11
          - artifact pull workflow mocha-coverage.json
          - artifact pull workflow jest-classic-coverage.json
          - artifact pull workflow jest-consumer-coverage.json
          - artifact pull workflow jest-sr-coverage.json
          - npx --yes istanbul-merge --out merged-output/merged-coverage.json *-coverage.json
          - npx nyc report -t merged-output --report-dir coverage --reporter=text --reporter=lcov
          - emit-sonarqube-data --run_only_sonar_scan
